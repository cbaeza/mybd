/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */
buildscript {
    dependencies {
        classpath 'com.h2database:h2:1.4.197'
        classpath 'org.jooq:jooq-codegen:3.11.9'
    }
}
plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id "org.flywaydb.flyway" version "5.2.4"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    /**
     * IMPLEMENTATION
     */
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'org.jooq:jooq:3.11.9'

    /**
     * COMPILE
     */
    compile 'org.jooq:jooq:3.11.9'

    /**
     * RUNTIME
     */
    runtime 'com.h2database:h2:1.4.197'

    /**
     * TEST
     */
    testImplementation 'junit:junit:4.12'
}

// Define the main class for the application
mainClassName = 'com.cbaeza.mydb.App'

task('buildDBEntities').doFirst {
    logger.info "***********************************************"
    logger.info "   BUILD DB ENTITIES -> jooq"
    logger.info "   project.flyway.driver -> ${project.ext['flyway.driver']}"
    logger.info "   project.flyway.url -> ${project.ext['flyway.url']}"
    logger.info "   project.flyway.user -> ${project.ext['flyway.user']}"
    logger.info "***********************************************"

    apply plugin: 'java'
    // Use your favourite XML builder to construct the code generation configuration file
    // ----------------------------------------------------------------------------------
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.11.0.xsd') {
        jdbc() {
            driver(project.ext['flyway.driver'])
            url(project.ext['flyway.url'])
            user(project.ext['flyway.user'])
            password(project.ext['flyway.password'])
        }
        generator() {
            database() {
            }

            // Watch out for this caveat when using MarkupBuilder with "reserved names"
            // - https://github.com/jOOQ/jOOQ/issues/4797
            // - http://stackoverflow.com/a/11389034/521799
            // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
            generate([:]) {
                pojos true
                daos true
            }
            target() {
                packageName('com.cbaeza.jooq.gradle.db')
                directory('src/main/java')
            }
        }
    }

    // Run the code generator
    // ----------------------
    org.jooq.codegen.GenerationTool.generate(writer.toString())
}




